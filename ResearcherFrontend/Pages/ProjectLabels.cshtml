@page
@model ResearcherFrontend.Pages.ProjectLabelsModel
@{
    ViewData["Title"] = "Project Labels";
}



<div>
    <h2 class="pb-2 pt-3">Labeled Data for Project: @Model.ProjectName</h2>

    <table id="myLabelsTable" class="display" style="width:100%">
    </table>
    <div style="height:60px"></div> @* margin fix from datatables *@

    
    <div class="modal fade" id="chartModal">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Chart Data</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div><canvas id="dataFromChart"></canvas></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>


<script>

    var json = @Html.Raw(Json.Serialize(Model.AllLabels.Select(label => label.ToString())));
    
    var jsonArray = json.map(JSON.parse);

    var formattedDataArray = jsonArray.map(function (data) {
        const formatDateString = (dateString) => {
            const date = new Date(dateString);
            const day = ('0' + date.getUTCDate()).slice(-2);
            const month = ('0' + (date.getUTCMonth() + 1)).slice(-2);
            const year = date.getUTCFullYear();
            const hours = ('0' + date.getUTCHours()).slice(-2);
            const minutes = ('0' + date.getUTCMinutes()).slice(-2);
            const seconds = ('0' + date.getUTCSeconds()).slice(-2);
            return `${day}.${month}.${year}, ${hours}:${minutes}:${seconds}`;
        };

        return {
            ...data,
            readingTime: formatDateString(data.readingTime)
        };
    });

    new DataTable('#myLabelsTable', {

        data: formattedDataArray,
        columns: [
            { data: 'labeledDataId', title: 'Label Data ID' },
            { data: 'labelName', title: 'Label Name' },
            { data: 'deviceCategoryName', title: 'Category Name' },
            { data: 'readingTime', title: 'Reading Time' },
            {
                data: null,
                title: 'Action',
                render: function (data, type, row) {
                    return '<a class="ps-4" href="#" data-toggle="modal" data-target="#chartModal" title="See chart for this LabelData ID"  onclick="loadData(\'' + row.labeledDataId + '\')"><i class="bi bi-bar-chart-line-fill h5"></i></a>';
                }
            }
        ],
        columnDefs: [{
            targets: [4],
            orderable: false
        }],
    });

    function loadData(labelId) {

        var versionLabels = Object.keys(jsonArray[0])
            .filter((key) => key.startsWith("v") && key !== "validFrom" && key !== "validTo");

        var datasets = versionLabels.map((version) => {
            return {
                label: version,
                data: jsonArray.map((entry) => ({
                    x: new Date(entry.readingTime).getTime(),
                    y: entry[version],
                })),
                fill: false,
                hidden: version !== "v1_7_0", 
            };
        });

        new Chart(document.getElementById('dataFromChart'), {
            type: 'line',
            data: {
                datasets: datasets,
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                animation: false,
                spanGaps: true,
                scales: {
                    x: {
                        type: 'time',
                    },
                },
                plugins: {
                    title: {
                        display: true,
                        text: "All Datapoints with the Label ID: " + labelId
                    }
                }
            },

        });

    }

    
</script>